package DAO;

import Ketnoi.JDBC_Connect;
import model.Sach;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class SachDAO implements DaoInterface<Sach> {

    public static SachDAO getInstance(){
        return new SachDAO();
    }
    @Override
    public int insert(Sach sach) {
        int ketQua = 0;

        try {
            // B∆∞·ªõc 1: T·∫°o k·∫øt n·ªëi ƒë·∫øn CSDL
            Connection con = JDBC_Connect.getConnection();

            // B∆∞·ªõc 2: T·∫°o c√¢u l·ªánh SQL v·ªõi tham s·ªë ?
            String sql = "INSERT INTO sach(ID, tenSach, giaBan, namXuatBan) VALUES (?, ?, ?, ?)";

            // B∆∞·ªõc 3: T·∫°o ƒë·ªëi t∆∞·ª£ng PreparedStatement
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, sach.getID());
            pstmt.setString(2, sach.getTenSach());
            pstmt.setFloat(3, sach.getGiaBan());
            pstmt.setInt(4, sach.getNamXuatBan());

            // B∆∞·ªõc 4: Th·ª±c thi
            ketQua = pstmt.executeUpdate();

            System.out.println("‚úÖ ƒê√£ th·ª±c thi: " + sql);
            System.out.println("üëâ C√≥ " + ketQua + " d√≤ng b·ªã thay ƒë·ªïi.");

            // B∆∞·ªõc 5: ƒê√≥ng k·∫øt n·ªëi
            JDBC_Connect.closeConnection(con);

        } catch (SQLException e) {
            System.out.println("‚ùå L·ªói khi insert s√°ch: " + e.getMessage());
        }

        return ketQua;
    }


    @Override
    public int update(Sach sach) {
        int ketQua = 0;

        try {
            // B∆∞·ªõc 1: K·∫øt n·ªëi CSDL
            Connection con = JDBC_Connect.getConnection();

            // B∆∞·ªõc 2: Vi·∫øt c√¢u l·ªánh SQL UPDATE
            String sql = "UPDATE sach SET tenSach = ?, giaBan = ?, namXuatBan = ? WHERE ID = ?";

            // B∆∞·ªõc 3: Truy·ªÅn gi√° tr·ªã b·∫±ng PreparedStatement
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, sach.getTenSach());
            pstmt.setFloat(2, sach.getGiaBan());
            pstmt.setInt(3, sach.getNamXuatBan());
            pstmt.setString(4, sach.getID()); // ƒëi·ªÅu ki·ªán WHERE

            // B∆∞·ªõc 4: Th·ª±c thi
            ketQua = pstmt.executeUpdate();

            System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t s√°ch c√≥ ID = " + sach.getID());
            System.out.println("üëâ C√≥ " + ketQua + " d√≤ng b·ªã thay ƒë·ªïi.");

            // B∆∞·ªõc 5: ƒê√≥ng k·∫øt n·ªëi
            JDBC_Connect.closeConnection(con);

        } catch (SQLException e) {
            System.out.println("‚ùå L·ªói khi update s√°ch: " + e.getMessage());
        }

        return ketQua;
    }


    @Override
    public int delete(Sach sach) {
        int ketQua = 0;

        try {
            // B∆∞·ªõc 1: K·∫øt n·ªëi
            Connection con = JDBC_Connect.getConnection();

            // B∆∞·ªõc 2: SQL DELETE
            String sql = "DELETE FROM sach WHERE ID = ?";

            // B∆∞·ªõc 3: Truy·ªÅn tham s·ªë
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, sach.getID());

            // B∆∞·ªõc 4: Th·ª±c thi
            ketQua = pstmt.executeUpdate();

            System.out.println("‚úÖ ƒê√£ x√≥a s√°ch c√≥ ID = " + sach.getID());
            System.out.println("üëâ C√≥ " + ketQua + " d√≤ng b·ªã x√≥a.");

            // B∆∞·ªõc 5: ƒê√≥ng k·∫øt n·ªëi
            JDBC_Connect.closeConnection(con);

        } catch (SQLException e) {
            System.out.println("‚ùå L·ªói khi x√≥a s√°ch: " + e.getMessage());
        }

        return ketQua;
    }


    @Override
    public ArrayList<Sach> selectAll() {
        return null;
    }

    @Override
    public Sach selectById(Sach sach) {
        return null;
    }

    @Override
    public ArrayList<Sach> selectByCondition(String condition) {
        return null;
    }
}
